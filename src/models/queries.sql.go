// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package models

import (
	"context"
)

const countData = `-- name: CountData :one
SELECT COUNT(id) AS qtty FROM random_data
`

func (q *Queries) CountData(ctx context.Context) (int64, error) {
	row := q.queryRow(ctx, q.countDataStmt, countData)
	var qtty int64
	err := row.Scan(&qtty)
	return qtty, err
}

const createRandomData = `-- name: CreateRandomData :exec
INSERT INTO random_data (x,y) VALUES (?,?)
`

type CreateRandomDataParams struct {
	X string `json:"x"`
	Y string `json:"y"`
}

func (q *Queries) CreateRandomData(ctx context.Context, arg CreateRandomDataParams) error {
	_, err := q.exec(ctx, q.createRandomDataStmt, createRandomData, arg.X, arg.Y)
	return err
}
